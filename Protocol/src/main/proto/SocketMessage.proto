syntax = "proto3";

option java_package = "octoteam.tahiti.protocol";
option java_outer_classname = "SocketMessageProtos";

// 客户端主动向服务端请求：Request；服务端反馈：Response
// 服务端向客户端推送：Push；客户端反馈：Ack

message Message {

  enum DirectionCode {
    UNKNOWN_DIRECTIONCODE       = 0;
    REQUEST                     = 1;    // 客户端 -> 服务端(负责生成 seqId)
    RESPONSE                    = 2;    // 服务端 -> 客户端响应(负责回复 seqId)
    PUSH                        = 3;    // 服务端 -> 客户端(负责生成 seqId)
    ACK                         = 4;    // 客户端 -> 服务端响应(负责回复 seqId)
  }

  enum ServiceCode {
    UNKNOWN_SERVICECODE         = 0;
    PING_REQUEST                = 1;    // 测试请求
    HEARTBEAT_PUSH              = 5;    // 心跳事件
    USER_SIGN_IN_REQUEST        = 10;   // 登录请求
    CHAT_SEND_MESSAGE_REQUEST   = 20;   // 发送消息请求
    SESSION_EXPIRED_PUSH        = 30;   // 会话过期事件
    CHAT_BROADCAST_PUSH         = 40;   // 消息广播事件
  }

  enum StatusCode {
    UNKNOWN_STATUSCODE          = 0;
    SUCCESS                     = 1;    // 成功

    FAIL                        = 2;    // 失败
    NACK                        = 3;    // 失败

    NOT_AUTHENTICATED           = 10;   // 需要登录但未登录
    BAD_REQUEST                 = 11;   // 无效请求
    LIMIT_EXCEEDED              = 20;   // 超出限额

    USERNAME_NOT_FOUND          = 50;   // 用户登录: 用户名未找到
    PASSWORD_INCORRECT          = 51;   // 用户登录: 密码错误
  }

  uint64 seqId                  = 1;    // 会话中唯一的 ID,用于标记请求的响应

  DirectionCode direction       = 2;

  ServiceCode service           = 3;    // 请求的服务,只适用于 REQUEST 和 PUSH

  StatusCode status             = 4;    // 反馈状态,只适用于 RESPONSE 和 ACK

  oneof body {
    PingPongBody              pingPong            = 5;
    UserSignInReqBody         userSignInReq       = 10;
    UserSignInRespBody        userSignInResp      = 11;
    ChatSendMessageReqBody    chatSendMessageReq  = 20;
    SessionExpiredPushBody    sessionExpiredPush  = 30;
    ChatBroadcastPushBody     chatBroadcastPush   = 40;
  }

}

message PingPongBody {
  string payload                = 1;
}

message UserSignInReqBody {
  string username               = 1;
  string password               = 2;
}

message UserSignInRespBody {
  int32 UID                     = 1;    // 登录成功才有
}

message ChatSendMessageReqBody {
  string payload                = 2;
  uint64 timestamp              = 3;
}

message SessionExpiredPushBody {
  enum Reason {
    UNKNOWN_REASON              = 0;
    EXPIRED                     = 1;
    REVOKED                     = 2;
    OTHER                       = 99;
  }
  Reason reason                 = 1;
}

message ChatBroadcastPushBody {
  string payload                = 2;
  uint64 timestamp              = 3;
  int32 senderUID               = 4;
  string senderUsername         = 5;
}
